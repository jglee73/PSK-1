#pragma once

#include "Interface_Code.h"

#include "CCommon_Error.h"
#include "CCommon_System.h"

#include "CObj_Phy__LBx_STD__DEF.h"


// ...
#define  ALID__OBJECT_MODE_UNKNOWN					11

#define  ALID__VENT_ERROR							13
#define  ALID__PUMP_ERROR							14


class CObj_Phy__LBx_STD : public __IOBJ__STD_TYPE
{
private:
	//-----------------------------------------------------
	CString sObject_Name;

	CCommon_Error__DEF_VARIABLE mERROR__DEF_VAR;
	CCommon_Error__MODULE_OBJ   mERROR__MODULE_OBJ;

	SCX__CTC__MODULE_OBJ xI_Module_Obj;
	SCX__CTC__SCH_MATERIAL_CTRL xI_SCH_MATERIAL_CTRL;
	
	SCX__USER_LOG_CTRL xI_LOG_CTRL;
	CString sDir_ROOT;
	//

	//-----------------------------------------------------
	// INTERNAL PROPERTY

	// ACT REPORT ...
	CX__VAR_STRING_CTRL sCH__TIME_ACT_START;
	CX__VAR_STRING_CTRL sCH__TIME_ACT_END;
	CX__VAR_STRING_CTRL sCH__TIME_ACT_TACK;
	CX__VAR_STRING_CTRL sCH__TIME_ACT_RESULT;

	// LOG ...
	CX__VAR_STRING_CTRL  xCH__LOG_SUB_DIRECTORY;
	CX__VAR_STRING_CTRL  xCH__LOG_FILE_NAME;

	CX__VAR_STRING_CTRL  xCH__WFR_LOG_INFO;

	// NEXT_CTRL_REQ
	CX__VAR_STRING_CTRL sCH__NEXT_CTRL_REQ;

	//  CONTROL  
	CX__VAR_DIGITAL_CTRL xCH__OBJ_CTRL;
	CString dVAR__MODE;

	CX__VAR_STRING_CTRL xCH__OBJ_MSG;
	CX__VAR_STRING_CTRL xCH__OBJ_FNC_MSG;
	
	CX__VAR_STRING_CTRL sCH__UPPER_OBJ_MSG;

	CX__VAR_DIGITAL_CTRL xCH__CFG_USE_FLAG;
	CX__VAR_DIGITAL_CTRL xCH__MOVE_FLAG;
	CString sVAR_SCH__IN_OUT_FLAG;
	CString sVAR_SCH__IN_COUNT;
	CString sVAR_SCH__OUT_COUNT;
	CString sVAR_SCH__CR_REQ;

	CX__VAR_STRING_CTRL sCH__SCH_IDLE_COUNT;

	// PARA ...
	CX__VAR_DIGITAL_CTRL dCH__PARA_SLOT_ID;

	//  STATUS   
	CX__VAR_DIGITAL_CTRL xCH__OBJ_VIRTUAL_STATUS;
	CX__VAR_DIGITAL_CTRL xCH__OBJ_STATUS;

	//
	CX__VAR_STRING_CTRL  xCH__PRE_MAINT_FLAG;

	CX__VAR_STRING_CTRL  xCH__PUMPING_FLAG;
	CX__VAR_STRING_CTRL  xCH__PUMPING_COMP_FLAG;

	CX__VAR_STRING_CTRL  xCH__VENTING_FLAG;
	CX__VAR_STRING_CTRL  xCH__VENTING_COMP_FLAG;

	CX__VAR_DIGITAL_CTRL xCH__PRESSURE_STATUS;
	CX__VAR_ANALOG_CTRL  xCH__PRESSURE_VALUE;
	CX__VAR_STRING_CTRL  xCH__PRESSURE_mTORR;
	CX__VAR_STRING_CTRL  xCH__VAC_SNS;

	CX__VAR_STRING_CTRL  xCH__CFG_HEATING_TIME;
	CX__VAR_STRING_CTRL  xCH__APP_HEATING_TIME_COUNT;

	CX__VAR_STRING_CTRL  xCH__SLOT_NO;
	CX__VAR_DIGITAL_CTRL dCH__SLIT_VLV_STS_X;
	CX__VAR_DIGITAL_CTRL dCH__SLIT_VLV_STS_SLOT[CFG_LBx__SLOT_MAX];
	CX__VAR_DIGITAL_CTRL dCH__DOOR_STS_X;
	CX__VAR_DIGITAL_CTRL dCH__DOOR_STS_SLOT[CFG_LBx__SLOT_MAX];

	//
	CX__VAR_STRING_CTRL  xCH__SVID_SLOT_DATA;
	CX__VAR_STRING_CTRL  xCH__SVID_SLIT_VLV_STS;

	//
	CX__VAR_DIGITAL_CTRL xCH__SLOT_X_VIRTUAL_STATUS[CFG_LBx__SLOT_MAX];
	CX__VAR_DIGITAL_CTRL xCH__SLOT_STATUS[CFG_LBx__SLOT_MAX];
	CX__VAR_STRING_CTRL  xCH__SLOT_TITLE[CFG_LBx__SLOT_MAX];

	CX__VAR_STRING_CTRL  sCH__LLx_LPx_PTN;
	CX__VAR_STRING_CTRL  sCH__LLx_LPx_STN;
	CX__VAR_STRING_CTRL  sCH__LLx_PPID;
	CX__VAR_STRING_CTRL  sCH__LLx_LOTID;
	CX__VAR_STRING_CTRL  sCH__LLx_MATERIALID;

	CX__VAR_STRING_CTRL  xCH__SCH_AUTO_PUMPING_REQ;
	CX__VAR_STRING_CTRL  xCH__SCH_AUTO_PUMPING_LOCK;

	CX__VAR_STRING_CTRL  xCH__SCH_LOCK;

	// SIM CFG ...
	CX__VAR_ANALOG_CTRL  aCH__SCH_TEST_CFG_INIT_SEC;
	CX__VAR_ANALOG_CTRL  aCH__SCH_TEST_CFG_PUMP_SEC;
	CX__VAR_ANALOG_CTRL  aCH__SCH_TEST_CFG_VENT_SEC;
	CX__VAR_ANALOG_CTRL  aCH__SCH_TEST_CFG_DOOR_SEC;
	CX__VAR_ANALOG_CTRL  aCH__SCH_TEST_CFG_SLOT_SEC;
	CX__VAR_ANALOG_CTRL  aCH__SCH_TEST_CFG_PREPMATER_SEC;
	CX__VAR_ANALOG_CTRL  aCH__SCH_TEST_CFG_MAP_SEC;
	CX__VAR_ANALOG_CTRL  aCH__SCH_TEST_CFG_COMPMATER_SEC;
	CX__VAR_ANALOG_CTRL  aCH__SCH_TEST_CFG_COMPMATER_EX_SEC;
	CX__VAR_ANALOG_CTRL  aCH__SCH_TEST_CFG_ISOLATE_SEC;
	CX__VAR_ANALOG_CTRL  aCH__SCH_TEST_CFG_LOAD_SEC;
	CX__VAR_ANALOG_CTRL  aCH__SCH_TEST_CFG_UNLOAD_SEC;

	CX__VAR_ANALOG_CTRL  aCH__SCH_TEST_CFG_PROC_READY_SEC;
	CX__VAR_ANALOG_CTRL  aCH__SCH_TEST_CFG_PROC_START_SEC;

	// PROCESS CHANNEL ...
	CX__VAR_STRING_CTRL  sCH__PARA_PROC_RECIPE_NAME;
	CX__VAR_STRING_CTRL  sCH__PARA_PROC_SCH_NAME;

	CX__VAR_STRING_CTRL  sCH__PROC_INFO_STEP_MSG;
	CX__VAR_STRING_CTRL  sCH__PROC_INFO_STEP_MODE;
	CX__VAR_STRING_CTRL  sCH__PROC_INFO_STEP_TOTAL_TIME;
	CX__VAR_STRING_CTRL  sCH__PROC_INFO_STEP_CUR_TIME;
	CX__VAR_STRING_CTRL  sCH__PROC_INFO_TOTAL_PROC_TIME;
	CX__VAR_STRING_CTRL  sCH__PROC_INFO_CUR_PROC_TIME;
	CX__VAR_STRING_CTRL  sCH__PROC_INFO_TOTAL_STEP_COUNT;
	CX__VAR_STRING_CTRL  sCH__PROC_INFO_CUR_STEP_COUNT;
	CX__VAR_STRING_CTRL  sCH__PROC_INFO_PROCESS_STATUS;

	CX__VAR_STRING_CTRL  sCH__PROC_INFO_TOTAL_PRC_TIME;
	CX__VAR_STRING_CTRL  sCH__PROC_INFO_CHANGE_PRC_TIME;
	CX__VAR_STRING_CTRL  sCH__PROC_INFO_PROCESS_PERCENT;
	CX__VAR_STRING_CTRL  sCH__PROC_INFO_PROCESS_BAR_STATUS;

	// DA OFFSET ...
	CX__VAR_STRING_CTRL  sCH__FDC_DA_RT_OFFSET;
	CX__VAR_STRING_CTRL  sCH__FDC_DA_R_OFFSET;
	CX__VAR_STRING_CTRL  sCH__FDC_DA_T_OFFSET;

	// ...
	CX__VAR_STRING_CTRL  sCH__PARA_TEMPLATE_FILE;
	//

	//-----------------------------------------------------------
	// EXTERNAL PROPERTY

	CString sSCH_NAME;

	// OBJ : DB ...
	CX__VAR_DIGITAL_CTRL  dEXT_CH__SCH_TEST_CFG_TMC_DUMMY_BY_CTC;

	CII__VAR_DIGITAL_CTRL *xEXT_CH_CFG__TRANSFER_MODE;

	CII__VAR_ANALOG_CTRL  *aEXT_CH_CFG__REF_ATM_PRESSURE;
	CII__VAR_ANALOG_CTRL  *aEXT_CH_CFG__REF_VAC_PRESSURE;

	CX__VAR_DIGITAL_CTRL  dEXT_CH__CFG_LL_SLOT_X_STATUS[CFG_LLx__SLOT_MAX];
	//


	//-----------------------------------------------------------
	SCI__THREAD_SYNC_CTRL xI_Sync_Ctrl;
	int iActive__CTRL_STS;
	int iActive__PROC_STS;

	//  PARA     
	CString aVAR__PARA__PREPMATERIAL_SLOT;
	CX__VAR_ANALOG_CTRL aCH__PARA_PREHEAT_TIME;
	CX__VAR_ANALOG_CTRL aCH__PARA_COOLING_TIME;

	// ...
	CString sMODE__INIT;
	int Call__INIT(CII_OBJECT__VARIABLE* p_variable);

	CString sMODE__MAINT;
	int Call__MAINT(CII_OBJECT__VARIABLE* p_variable);

	CString sMODE__PUMP;
	int Call__PUMP(CII_OBJECT__VARIABLE* p_variable,CII_OBJECT__ALARM *p_alarm);

	CString sMODE__VENT;
	int Call__VENT(CII_OBJECT__VARIABLE* p_variable,CII_OBJECT__ALARM *p_alarm);

	//
	CString sMODE__DOOR_OPEN;
	int Call__DOOR_OPEN(CII_OBJECT__VARIABLE* p_variable,CII_OBJECT__ALARM *p_alarm);

	CString sMODE__DOOR_CLOSE;
	int Call__DOOR_CLOSE(CII_OBJECT__VARIABLE* p_variable,CII_OBJECT__ALARM *p_alarm);

	//
	CString sMODE__SLOT_OPEN;
	int Call__SLOT_OPEN(CII_OBJECT__VARIABLE* p_variable,CII_OBJECT__ALARM *p_alarm);

	CString sMODE__SLOT_CLOSE;
	int Call__SLOT_CLOSE(CII_OBJECT__VARIABLE* p_variable,CII_OBJECT__ALARM *p_alarm);

	//
	CString sMODE__PIN_UP;
	int Call__PIN_UP(CII_OBJECT__VARIABLE* p_variable,CII_OBJECT__ALARM *p_alarm);

	CString sMODE__PIN_DOWN;
	int Call__PIN_DOWN(CII_OBJECT__VARIABLE* p_variable,CII_OBJECT__ALARM *p_alarm);

	//
	CString sMODE__PREPMATER;
	int Call__PREPMATER(CII_OBJECT__VARIABLE* p_variable);

	CString sMODE__MAP;
	int Call__MAP(CII_OBJECT__VARIABLE* p_variable);

	CString sMODE__COMPMATER;
	CString sMODE__COMPMATER_EX;
	int Call__COMPMATER(CII_OBJECT__VARIABLE* p_variable, const int ex_mode);

	CString sMODE__ISOLATE;
	int Call__ISOLATE(CII_OBJECT__VARIABLE* p_variable);

	// 
	CString sMODE__PROC_MAIN;
	int  Call__PROC_MAIN(CII_OBJECT__VARIABLE* p_variable,CII_OBJECT__ALARM* p_alarm);
	int  _Fnc__PROC_MAIN(CII_OBJECT__VARIABLE* p_variable,CII_OBJECT__ALARM* p_alarm);

	void _Start__Wafer_Log();
	void _Process_Report__Wafer_Info();

	//
	CString sMODE__PROC_PRE;
	int  Call__PROC_PRE(CII_OBJECT__VARIABLE* p_variable,CII_OBJECT__ALARM* p_alarm);

	CString sMODE__PROC_POST;
	int  Call__PROC_POST(CII_OBJECT__VARIABLE* p_variable,CII_OBJECT__ALARM* p_alarm);

	CString sMODE__PROC_MAINT;
	int  Call__PROC_MAINT(CII_OBJECT__VARIABLE* p_variable,CII_OBJECT__ALARM* p_alarm);

	// SCH_TEST : CONFIG ...
	CString sMODE__SCH_TEST_CFG;
	int  Call__SCH_TEST_CFG(CII_OBJECT__VARIABLE* p_variable);
	//

	// ...
	int Fnc__MODULE_OBJ(CII_OBJECT__VARIABLE* p_variable,
						const CString obj_mode);
	int Sim__MODULE_OBJ(CII_OBJECT__VARIABLE* p_variable,
						const CString obj_mode);

	int Fnc__WAIT_SEC(CII_OBJECT__VARIABLE* p_variable,
					  CII__VAR_ANALOG_CTRL* pch_analog_cfg);
	//

	//-----------------------------------------------------------
	void Mon__All_State(CII_OBJECT__VARIABLE *p_variable, CII_OBJECT__ALARM* p_alarm);
	int iMON_FLAG__PRESSURE_STATUS;

	void Set__SLOT_PARAMETER(CII_OBJECT__VARIABLE *p_variable);
	//


public:
	CObj_Phy__LBx_STD();
	~CObj_Phy__LBx_STD();

	//-------------------------------------------------------------------------
	int __DEFINE__CONTROL_MODE(obj,l_mode);
	int __DEFINE__VERSION_HISTORY(version);

	int __DEFINE__VARIABLE_STD(p_variable);
	int __DEFINE__ALARM(p_alarm);

	//-------------------------------------------------------------------------
	int __INITIALIZE__OBJECT(p_variable,p_ext_obj_create);
	int __START__OBJECT();

	//-------------------------------------------------------------------------
	int __CALL__CONTROL_MODE(mode,p_debug,p_variable,p_alarm);
	int __CALL__MONITORING(id,p_variable,p_alarm);
};
