#pragma once

#include "Interface_Code.h"

#include "CCommon_Error.h"
#include "CCommon_System.h"
#include "CCommon_DEF.h"

#include "CObj__LAMP_CTRL__DEF.h"


class CObj__LAMP_CTRL : public __IOBJ__STD_TYPE
{
private:
	CCommon_Error__USER_FNC mERROR__USER_FNC;

	//-------------------------------------------------------------------------
	CString sObject_Name;

	// ...
	SCX__USER_LOG_CTRL xLOG_CTRL;

	int iActive__SIM_MODE;
	//

	//-------------------------------------------------------------------------
	// INTERNAL PROPERTY

	// CONFIG ...
	CX__VAR_DIGITAL_CTRL dCH__IO_MONITOR__ACTIVE_FLAG;
	CX__VAR_ANALOG_CTRL  aCH__CFG_BLINK_PERIOD_SEC;
	CX__VAR_DIGITAL_CTRL dCH__CFG_BLINK_MODE_USE;

	CX__VAR_DIGITAL_CTRL dCH__CFG_BUZZER_USE;

	CX__VAR_DIGITAL_CTRL dCH__CFG_MELODY_USE;
	CX__VAR_DIGITAL_CTRL dCH__CFG_MELODY_NUM;

	// REMOTE_LINK.LIGHT ...
	CX__VAR_DIGITAL_CTRL dCH__LINK_LIGHT_RED_ON_OFF_ACTIVE;
	CX__VAR_DIGITAL_CTRL dCH__LINK_LIGHT_YELLOW_ON_OFF_ACTIVE;
	CX__VAR_DIGITAL_CTRL dCH__LINK_LIGHT_GREEN_ON_OFF_ACTIVE;
	CX__VAR_DIGITAL_CTRL dCH__LINK_LIGHT_BLUE_ON_OFF_ACTIVE;
	CX__VAR_DIGITAL_CTRL dCH__LINK_LIGHT_WHITE_ON_OFF_ACTIVE;

	CX__VAR_DIGITAL_CTRL dCH__LINK_LIGHT_RED_BLINK_ACTIVE;
	CX__VAR_DIGITAL_CTRL dCH__LINK_LIGHT_YELLOW_BLINK_ACTIVE;
	CX__VAR_DIGITAL_CTRL dCH__LINK_LIGHT_GREEN_BLINK_ACTIVE;
	CX__VAR_DIGITAL_CTRL dCH__LINK_LIGHT_BLUE_BLINK_ACTIVE;
	CX__VAR_DIGITAL_CTRL dCH__LINK_LIGHT_WHITE_BLINK_ACTIVE;

	// REMOTE_LINK.ALARM & MELODY ...
	CX__VAR_DIGITAL_CTRL dCH__LINK_ALARM_BUZZER;
	CX__VAR_DIGITAL_CTRL dCH__LINK_MELODY_BUZZER;

	// LOCAL_LINK.LIGHT ...
	CX__VAR_DIGITAL_CTRL dCH__LOCAL_LINK_LIGHT_RED_ON_OFF_ACTIVE;
	CX__VAR_DIGITAL_CTRL dCH__LOCAL_LINK_LIGHT_YELLOW_ON_OFF_ACTIVE;
	CX__VAR_DIGITAL_CTRL dCH__LOCAL_LINK_LIGHT_GREEN_ON_OFF_ACTIVE;
	CX__VAR_DIGITAL_CTRL dCH__LOCAL_LINK_LIGHT_BLUE_ON_OFF_ACTIVE;
	CX__VAR_DIGITAL_CTRL dCH__LOCAL_LINK_LIGHT_WHITE_ON_OFF_ACTIVE;

	CX__VAR_DIGITAL_CTRL dCH__LOCAL_LINK_LIGHT_RED_BLINK_ACTIVE;
	CX__VAR_DIGITAL_CTRL dCH__LOCAL_LINK_LIGHT_YELLOW_BLINK_ACTIVE;
	CX__VAR_DIGITAL_CTRL dCH__LOCAL_LINK_LIGHT_GREEN_BLINK_ACTIVE;
	CX__VAR_DIGITAL_CTRL dCH__LOCAL_LINK_LIGHT_BLUE_BLINK_ACTIVE;
	CX__VAR_DIGITAL_CTRL dCH__LOCAL_LINK_LIGHT_WHITE_BLINK_ACTIVE;

	// LOCAL_LINK.ALARM & MELODY ...
	CX__VAR_DIGITAL_CTRL dCH__LOCAL_LINK_ALARM_BUZZER;
	CX__VAR_DIGITAL_CTRL dCH__LOCAL_LINK_MELODY_BUZZER;

	// LINK SET ...
	CX__VAR_STRING_CTRL  sCH__LINK_SET_LIGHT_RED;
	CX__VAR_STRING_CTRL  sCH__LINK_SET_LIGHT_YELLOW;
	CX__VAR_STRING_CTRL  sCH__LINK_SET_LIGHT_GREEN;
	CX__VAR_STRING_CTRL  sCH__LINK_SET_LIGHT_BLUE;
	CX__VAR_STRING_CTRL  sCH__LINK_SET_LIGHT_WHITE;

	CX__VAR_STRING_CTRL  sCH__LINK_SET_ALARM_BUZZER;
	CX__VAR_STRING_CTRL  sCH__LINK_SET_MELODY_BUZZER;
	//

	//-------------------------------------------------------------------------
	// EXTERNAL PROPERTY

	// LINK DRIVER ...
	CX__VAR_DIGITAL_CTRL dEXT_CH__PARA_LAMP_RED;
	CX__VAR_DIGITAL_CTRL dEXT_CH__PARA_LAMP_YELLOW;
	CX__VAR_DIGITAL_CTRL dEXT_CH__PARA_LAMP_GREEN;
	CX__VAR_DIGITAL_CTRL dEXT_CH__PARA_LAMP_BLUE;
	CX__VAR_DIGITAL_CTRL dEXT_CH__PARA_ALARM_BUZZER;

	CX__VAR_DIGITAL_CTRL doEXT_CH__EFEM_LAMP_BUZZER;
	//


	//------------------------------------------------------------------------------
	// LIGHT RED -----
	CString sMODE__RED_ON;
	int  Call__RED_ON();

	CString sMODE__RED_OFF;
	int  Call__RED_OFF();

	CString sMODE__RED_BLINK;
	int  Call__RED_BLINK();
	//

	// LIGHT YELLOW -----
	CString sMODE__YELLOW_ON;
	int  Call__YELLOW_ON();

	CString sMODE__YELLOW_OFF;
	int  Call__YELLOW_OFF();

	CString sMODE__YELLOW_BLINK;
	int  Call__YELLOW_BLINK();
	//

	// LIGHT GREEN -----
	CString sMODE__GREEN_ON;
	int  Call__GREEN_ON();

	CString sMODE__GREEN_OFF;
	int  Call__GREEN_OFF();

	CString sMODE__GREEN_BLINK;
	int  Call__GREEN_BLINK();
	//

	// LIGHT BLUE -----
	CString sMODE__BLUE_ON;
	int  Call__BLUE_ON();

	CString sMODE__BLUE_OFF;
	int  Call__BLUE_OFF();

	CString sMODE__BLUE_BLINK;
	int  Call__BLUE_BLINK();
	//

	// WHITE BLUE -----
	CString sMODE__WHITE_ON;
	int  Call__WHITE_ON();

	CString sMODE__WHITE_OFF;
	int  Call__WHITE_OFF();

	CString sMODE__WHITE_BLINK;
	int  Call__WHITE_BLINK();

	// ALARM BUZZER -----
	CString sMODE__ALARM_BUZZER_ON;
	int  Call__ALARM_BUZZER_ON();

	CString sMODE__ALARM_BUZZER_OFF;
	int  Call__ALARM_BUZZER_OFF();

	CString sMODE__ALARM_BUZZER_RESET_ON;
	int  Call__ALARM_BUZZER_RESET_ON();

	CString sMODE__ALARM_BUZZER_RESET_OFF;
	int  Call__ALARM_BUZZER_RESET_OFF();
	//

	// MDLODY -----
	CString sMODE__MELODY_ON;
	int  Call__MELODY_ON();

	CString sMODE__MELODY_OFF;
	int  Call__MELODY_OFF();
	//


	//------------------------------------------------------------------------------
	void Mon__IO_MONITOR(CII_OBJECT__VARIABLE* p_variable,CII_OBJECT__ALARM* p_alarm);
	//


public:
	CObj__LAMP_CTRL();
	~CObj__LAMP_CTRL();

	//-------------------------------------------------------------------------
	int __DEFINE__CONTROL_MODE(obj,l_mode);
	int __DEFINE__VERSION_HISTORY(version);

	int __DEFINE__VARIABLE_STD(p_variable);
	int __DEFINE__ALARM(p_alarm);

	int __Define__USER_FUNCTION(CII_DEFINE__FUNCTION *p_fnc_ctrl);

	//-------------------------------------------------------------------------
	int __INITIALIZE__OBJECT(p_variable,p_ext_obj_create);

	//-------------------------------------------------------------------------
	int __CALL__CONTROL_MODE(mode,p_debug,p_variable,p_alarm);
	int __CALL__MONITORING(id,p_variable,p_alarm);
};
