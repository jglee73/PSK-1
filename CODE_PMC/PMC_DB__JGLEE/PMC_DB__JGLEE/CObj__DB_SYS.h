#pragma once

#include "Interface_Code.h"
#include "CCommon_Error.h"

#include "CObj__DB_SYS__DEF.h"


class CObj__DB_SYS : public __IOBJ__STD_TYPE
{
private:
	//-------------------------------------------------------------------------
	CString sObject_Name;

	CCommon_Error__USER_FNC mERROR__USER_FNC;


	//-------------------------------------------------------------------------
	//  INTERNAL PROPERTY
	
	// ...
	int iSIM_MODE;
	CX__VAR_STRING_CTRL  sCH__SIM_PRESSURE_TORR;

	// ...
	CX__VAR_STRING_CTRL  sCH__PMC_NAME;
	CX__VAR_STRING_CTRL  sCH__PMC_TYPE;

	CX__VAR_STRING_CTRL  sCH__SYSTEM_LOCK;

	CX__VAR_STRING_CTRL  xCH__SYSTEM_MSG;
	CX__VAR_STRING_CTRL  xCH__FNC_MSG;

	CX__VAR_STRING_CTRL  sCH__SYSTEM_SETUP_REQ;
	CX__VAR_DIGITAL_CTRL dCH__REQ_GOTO_MAINT;
	CX__VAR_STRING_CTRL  sCH__CUR_NEXT_PROCESS;

	// MON ...
	CX__VAR_STRING_CTRL  sCH__MON_SYSTEM_PROCESS_ACTIVE;

	CX__VAR_STRING_CTRL  sCH__SYSTEM_PROC_STEP_ID;
	CX__VAR_STRING_CTRL  sCH__SYSTEM_PROC_LAST_STEP_FLAG;

	//
	CX__VAR_DIGITAL_CTRL dCH__MON_INTERLOCK_HEAVY_ACTIVE_SYSTEM;
	CX__VAR_DIGITAL_CTRL dCH__MON_INTERLOCK_LIGHT_ACTIVE_SYSTEM;

	CX__VAR_STRING_CTRL  sCH__MON_INTERLOCK_HEAVY_MSG_SYSTEM;
	CX__VAR_STRING_CTRL  sCH__MON_INTERLOCK_LIGHT_MSG_SYSTEM;

	//
	CX__VAR_DIGITAL_CTRL dCH__MON_INTERLOCK_HEAVY_ACTIVE_HW;
	CX__VAR_DIGITAL_CTRL dCH__MON_INTERLOCK_LIGHT_ACTIVE_HW;

	CX__VAR_STRING_CTRL  sCH__MON_INTERLOCK_HEAVY_MSG_HW;
	CX__VAR_STRING_CTRL  sCH__MON_INTERLOCK_LIGHT_MSG_HW;

	//
	CX__VAR_DIGITAL_CTRL dCH__MON_INTERLOCK_HEAVY_ACTIVE_CHAMBER;
	CX__VAR_DIGITAL_CTRL dCH__MON_INTERLOCK_LIGHT_ACTIVE_CHAMBER;

	CX__VAR_STRING_CTRL  sCH__MON_INTERLOCK_HEAVY_MSG_CHAMBER;
	CX__VAR_STRING_CTRL  sCH__MON_INTERLOCK_LIGHT_MSG_CHAMBER;

	//
	CX__VAR_DIGITAL_CTRL dCH__MON_INTERLOCK_HEAVY_ACTIVE_GAS_BOX;
	CX__VAR_DIGITAL_CTRL dCH__MON_INTERLOCK_LIGHT_ACTIVE_GAS_BOX;
	
	CX__VAR_STRING_CTRL  sCH__MON_INTERLOCK_HEAVY_MSG_GAS_BOX;
	CX__VAR_STRING_CTRL  sCH__MON_INTERLOCK_LIGHT_MSG_GAS_BOX;

	//
	CX__VAR_DIGITAL_CTRL dCH__MON_INTERLOCK_HEAVY_ACTIVE_RF_SYS;
	CX__VAR_DIGITAL_CTRL dCH__MON_INTERLOCK_LIGHT_ACTIVE_RF_SYS;

	CX__VAR_STRING_CTRL  sCH__MON_INTERLOCK_HEAVY_MSG_RF_SYS;
	CX__VAR_STRING_CTRL  sCH__MON_INTERLOCK_LIGHT_MSG_RF_SYS;

	// CFG : GAS_BOX ...
	CX__VAR_ANALOG_CTRL  aCH__CFG_GAS_BOX_DIFF_PRESSURE_LOW_PRESSURE;

	// CFG : WAFER_COUNT ...
	CX__VAR_DIGITAL_CTRL dCH__CFG_WAFER_COUNT_WARNING_APPLY;
	CX__VAR_ANALOG_CTRL  aCH__CFG_WAFER_COUNT_WARNING_REF;

	CX__VAR_DIGITAL_CTRL dCH__CFG_WAFER_COUNT_SYSTEM_DOWN_APPLY;
	CX__VAR_ANALOG_CTRL  aCH__CFG_WAFER_COUNT_SYSTEM_DOWN_REF;

	// CFG : SYSTEM_INITIAL ...
	CX__VAR_DIGITAL_CTRL dCH__CFG_SYSTEM_INITIAL_DI_SENSOR_INTERLOCK_CHECK;
	CX__VAR_DIGITAL_CTRL dCH__CFG_SYSTEM_INITIAL_AUTO_PM_CHECK;

	// CFG : BEFORE_PROCESS ...
	CX__VAR_DIGITAL_CTRL dCH__CFG_BEFORE_PROCESS_DI_SENSOR_INTERLOCK_CHECK;

	// CFG ...
	CX__VAR_DIGITAL_CTRL dCH__CFG_SCH_TEST_SIM_ALARM_REPORT_MODE;
	CX__VAR_DIGITAL_CTRL dCH__CFG_SCH_TEST_SIM_ALARM_STEP_ACTIVE;

	// 
	CX__VAR_STRING_CTRL  sCH__SYSTEM_INTERLOCK_FLAG;
	CX__VAR_STRING_CTRL  sCH__SYSTEM_INTERLOCK_MSG;

	//
	CX__VAR_DIGITAL_CTRL dCH__CFG_INTERLOCK_USE_FLAG;
	CX__VAR_DIGITAL_CTRL dCH__CFG_INTERLOCK_USE_ALWAYS_ENABLE;

	CX__VAR_DIGITAL_CTRL dCH__CFG_INTERLOCK_USE__INTERLOCK_SNS_ALL;

	CX__VAR_DIGITAL_CTRL dCH__CFG_INTERLOCK_USE__INTERLOCK_SNS_FAN1;
	CX__VAR_DIGITAL_CTRL dCH__CFG_INTERLOCK_USE__INTERLOCK_SNS_FAN2;
	CX__VAR_DIGITAL_CTRL dCH__CFG_INTERLOCK_USE__INTERLOCK_SNS_FAN3;
	CX__VAR_DIGITAL_CTRL dCH__CFG_INTERLOCK_USE__INTERLOCK_SNS_FAN4;
	CX__VAR_DIGITAL_CTRL dCH__CFG_INTERLOCK_USE__INTERLOCK_SNS_FAN5;
	CX__VAR_DIGITAL_CTRL dCH__CFG_INTERLOCK_USE__INTERLOCK_SNS_FAN6;
	CX__VAR_DIGITAL_CTRL dCH__CFG_INTERLOCK_USE__INTERLOCK_SNS_EMO;
	CX__VAR_DIGITAL_CTRL dCH__CFG_INTERLOCK_USE__INTERLOCK_SNS_LEAK;
	CX__VAR_DIGITAL_CTRL dCH__CFG_INTERLOCK_USE__INTERLOCK_SNS_GAS_LEAK_NH3;
	CX__VAR_DIGITAL_CTRL dCH__CFG_INTERLOCK_USE__INTERLOCK_SNS_GAS_LEAK_NF3;
	CX__VAR_DIGITAL_CTRL dCH__CFG_INTERLOCK_USE__INTERLOCK_SNS_GAS_LEAK_H2;
	CX__VAR_DIGITAL_CTRL dCH__CFG_INTERLOCK_USE__INTERLOCK_SNS_PLASMA_OVERTIME;
	CX__VAR_DIGITAL_CTRL dCH__CFG_INTERLOCK_USE__INTERLOCK_SNS_BIAS_OVERTIME;
	CX__VAR_DIGITAL_CTRL dCH__CFG_INTERLOCK_USE__INTERLOCK_SNS_PC_ALIVE_ERROR;
	CX__VAR_DIGITAL_CTRL dCH__CFG_INTERLOCK_USE__INTERLOCK_SNS_HEATER1_INTERLOCK;
	CX__VAR_DIGITAL_CTRL dCH__CFG_INTERLOCK_USE__INTERLOCK_SNS_HEATER2_INTERLOCK;

	CX__VAR_DIGITAL_CTRL dCH__CFG_INTERLOCK_LEVEL__INTERLOCK_SNS_FAN1;
	CX__VAR_DIGITAL_CTRL dCH__CFG_INTERLOCK_LEVEL__INTERLOCK_SNS_FAN2;
	CX__VAR_DIGITAL_CTRL dCH__CFG_INTERLOCK_LEVEL__INTERLOCK_SNS_FAN3;
	CX__VAR_DIGITAL_CTRL dCH__CFG_INTERLOCK_LEVEL__INTERLOCK_SNS_FAN4;
	CX__VAR_DIGITAL_CTRL dCH__CFG_INTERLOCK_LEVEL__INTERLOCK_SNS_FAN5;
	CX__VAR_DIGITAL_CTRL dCH__CFG_INTERLOCK_LEVEL__INTERLOCK_SNS_FAN6;
	CX__VAR_DIGITAL_CTRL dCH__CFG_INTERLOCK_LEVEL__INTERLOCK_SNS_EMO;
	CX__VAR_DIGITAL_CTRL dCH__CFG_INTERLOCK_LEVEL__INTERLOCK_SNS_LEAK;
	CX__VAR_DIGITAL_CTRL dCH__CFG_INTERLOCK_LEVEL__INTERLOCK_SNS_GAS_LEAK_NH3;
	CX__VAR_DIGITAL_CTRL dCH__CFG_INTERLOCK_LEVEL__INTERLOCK_SNS_GAS_LEAK_NF3;
	CX__VAR_DIGITAL_CTRL dCH__CFG_INTERLOCK_LEVEL__INTERLOCK_SNS_GAS_LEAK_H2;
	CX__VAR_DIGITAL_CTRL dCH__CFG_INTERLOCK_LEVEL__INTERLOCK_SNS_PLASMA_OVERTIME;
	CX__VAR_DIGITAL_CTRL dCH__CFG_INTERLOCK_LEVEL__INTERLOCK_SNS_BIAS_OVERTIME;
	CX__VAR_DIGITAL_CTRL dCH__CFG_INTERLOCK_LEVEL__INTERLOCK_SNS_PC_ALIVE_ERROR;
	CX__VAR_DIGITAL_CTRL dCH__CFG_INTERLOCK_LEVEL__INTERLOCK_SNS_HEATER1_INTERLOCK;
	CX__VAR_DIGITAL_CTRL dCH__CFG_INTERLOCK_LEVEL__INTERLOCK_SNS_HEATER2_INTERLOCK;

	//
	CX__VAR_ANALOG_CTRL  aCH__CFG_INTERLOCK_CHECK_SEC;

	CX__VAR_STRING_CTRL  sCH__CUR_SNS_TIMECOUNT_FAN1;
	CX__VAR_STRING_CTRL  sCH__CUR_SNS_TIMECOUNT_FAN2;
	CX__VAR_STRING_CTRL  sCH__CUR_SNS_TIMECOUNT_FAN3;
	CX__VAR_STRING_CTRL  sCH__CUR_SNS_TIMECOUNT_EMO;
	CX__VAR_STRING_CTRL  sCH__CUR_SNS_TIMECOUNT_LEAK;
	CX__VAR_STRING_CTRL  sCH__CUR_SNS_TIMECOUNT_GAS_LEAK_NH3;
	CX__VAR_STRING_CTRL  sCH__CUR_SNS_TIMECOUNT_GAS_LEAK_NF3;
	CX__VAR_STRING_CTRL  sCH__CUR_SNS_TIMECOUNT_GAS_LEAK_H2;
	CX__VAR_STRING_CTRL  sCH__CUR_SNS_TIMECOUNT_PLASMA_OVERTIME;
	CX__VAR_STRING_CTRL  sCH__CUR_SNS_TIMECOUNT_BIAS_OVERTIME;
	CX__VAR_STRING_CTRL  sCH__CUR_SNS_TIMECOUNT_PC_ALIVE_ERROR;
	CX__VAR_STRING_CTRL  sCH__CUR_SNS_TIMECOUNT_HEATER1_INTERLOCK;
	CX__VAR_STRING_CTRL  sCH__CUR_SNS_TIMECOUNT_HEATER2_INTERLOCK;

	CX__VAR_DIGITAL_CTRL dCH__CFG_INTERLOCK_USE__CHM_MANOMETER_ISO;
	CX__VAR_DIGITAL_CTRL dCH__CFG_INTERLOCK_USE__TMP_VAT_OPEN;
	CX__VAR_DIGITAL_CTRL dCH__CFG_INTERLOCK_USE__FORELINE_VLV_OPEN;
	CX__VAR_DIGITAL_CTRL dCH__CFG_INTERLOCK_USE__MFC_OUT_VLV_OPEN;

	CX__VAR_DIGITAL_CTRL dCH__CFG_INTERLOCK_ID_USE_FLAG[CFG_INTERLOCK__LIMIT];

	// Interlock Channel ...
	CX__VAR_DIGITAL_CTRL dCH__CFG_INTERLOCK_MFC_TYPE[CFG_SIZE__MFC_OBJ][CFG_SIZE__MFC_OBJ];

	// ...
	CX__VAR_DIGITAL_CTRL dCH__CTC_LEAK_CHECK_USE_FLAG;
	CX__VAR_ANALOG_CTRL aCH__CTC_LEAK_CHECK_OVER_PUMPING_TIME;
	CX__VAR_ANALOG_CTRL aCH__CTC_LEAK_CHECK_STABLE_TIME;
	CX__VAR_ANALOG_CTRL aCH__CTC_LEAK_CHECK_TIME_MIN;

	// ...
	CX__VAR_ANALOG_CTRL  CFG_aCHM_MANOMETER_PRESS_SW1_SETTING;
	CX__VAR_ANALOG_CTRL  CFG_aCHM_MANOMETER_PRESS_SW2_SETTING;

	CX__VAR_STRING_CTRL	 sCH__CFG_SOFTWARE_VERSION;
	CX__VAR_ANALOG_CTRL  aCH__CFG_CHM_MANOMETER_MAX_PRESSURE_mTORR;
	CX__VAR_ANALOG_CTRL  aCH__CFG_PROCESS_MANOMETER_MAX_PRESSURE_mTORR;
	CX__VAR_ANALOG_CTRL  aCH__CFG_PROCESS_MANOMETER_ISO_PRESSURE_mTORR;
	
	CX__VAR_ANALOG_CTRL	 aCH__CFG_VX_CONFIG_MEMORY_LIMIT;
	CX__VAR_ANALOG_CTRL	 aCH__CFG_VX_FREE_MEMORY_LIMIT;
	CX__VAR_ANALOG_CTRL	 aCH__CFG_VOLUME_SIZE;

	CX__VAR_ANALOG_CTRL	 aCH__CFG_GAS_BOX_PRIMARY_VALVE_DELAY_TIME;
	CX__VAR_ANALOG_CTRL	 aCH__CFG_GAS_BOX_SECONDARY_VALVE_DELAY_TIME;

	// ...
	CX__VAR_ANALOG_CTRL  aCH__CFG_TMP_ISOLATION_MAX_PRESSURE_mTORR;
	CX__VAR_ANALOG_CTRL  aCH__CFG_TMP_FORELINE_VLV_OPEN_PRESSURE_mTORR;
	CX__VAR_ANALOG_CTRL  aCH__CFG_TMP_FORELINE_VLV_OPEN_IDLE_TIMEOUT;

	// ...
	CX__VAR_DIGITAL_CTRL dCH__CFG_CHM_PM_ITEM_WAP_CONDUCTANCE_APPLY;
	CX__VAR_STRING_CTRL  sCH__CHM_PM_ITEM__WAP_CONDUCTANCE_FLAG;

	// LOG.LEAKCHECK ...
	CX__VAR_STRING_CTRL  sCH__LEAK_CHECK_CHECK_START_DATE;
	CX__VAR_STRING_CTRL  sCH__LEAK_CHECK_CHECK_LOG_DAY;	
	CX__VAR_STRING_CTRL  sCH__LEAK_CHECK_CHECK_LOG_REQ;

	CX__VAR_STRING_CTRL  sCH__LEAK_CHECK_LOG_CHECK_TIME;
	CX__VAR_STRING_CTRL  sCH__LEAK_CHECK_LOG_BASE_PRESSURE;
	CX__VAR_STRING_CTRL  sCH__LEAK_CHECK_LOG_START_PRESSURE;

	CX__VAR_STRING_CTRL  sCH__LEAK_CHECK_LOG_PRESSURE[CFG_SIZE__LOG_LEAKCHECK];
	CX__VAR_STRING_CTRL  sCH__LEAK_CHECK_LOG_LEAKRATE[CFG_SIZE__LOG_LEAKCHECK];

	CX__VAR_STRING_CTRL  sCH__LEAK_CHECK_LOG_LEAKRATE_RESULT;

	CX__VAR_STRING_CTRL  sCH__LEAK_CHECK_LOG_GRAPH_CUR_DATA;
	CX__VAR_STRING_CTRL  sCH__LEAK_CHECK_LOG_GRAPH_REF_ALARM;

	// ...
	CX__VAR_ANALOG_CTRL  aCH__CFG_MFC_FLOW_WARNING_TIMEOUT_SEC;
	CX__VAR_ANALOG_CTRL  aCH__CFG_MFC_CLOSE_WARNING_TIMEOUT_SEC;

	CX__VAR_DIGITAL_CTRL dCH__CFG_MFC_485_SETPOINT_READ_CONFIRM_USE;
	CX__VAR_DIGITAL_CTRL dCH__CFG_MFC_485_COMM_OFFLINE_ALARM_USE;
	CX__VAR_DIGITAL_CTRL dCH__CFG_MFC_485_CONTROL_TIMEOUT_ALARM_USE;

	CX__VAR_DIGITAL_CTRL dCH__CFG_PMC_ATM_MAINT_FLAG;

	// RECIPE CONFIG ...
	CX__VAR_DIGITAL_CTRL dCH__CFG_RF_OFF_RAMP_DOWN_TIME_APPLY;


	//-------------------------------------------------------------------------
	void Mon__PARAMETER_CHECK(CII_OBJECT__VARIABLE* p_variable, CII_OBJECT__ALARM *p_alarm);
	//


public:
	CObj__DB_SYS();
	~CObj__DB_SYS();

	//-------------------------------------------------------------------------
	int __DEFINE__CONTROL_MODE(obj,l_mode);
	int __DEFINE__VERSION_HISTORY(version);

	int __DEFINE__VARIABLE_STD(p_variable);
	int __DEFINE__ALARM(p_alarm);

	//-------------------------------------------------------------------------
	int __INITIALIZE__OBJECT(p_variable,p_ext_obj_create);

	//-------------------------------------------------------------------------
	int __CALL__CONTROL_MODE(mode,p_debug,p_variable,p_alarm);
	int __CALL__MONITORING(id,p_variable,p_alarm);
};
